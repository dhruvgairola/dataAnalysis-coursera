help()
demo()
graphics
recursion
help(graphics)
library(help="graphics")
plot
plot(x,y)
demo(package = .packages(all.available = TRUE))
demo(graphics = .packages(all.available = TRUE))
demo(graphics = .graphics(all.available = TRUE))
clear
clr()
clrscr()
clear()
cls()
cls
help()
tkcanvas
tkcanvas()
image
image()
UseMethod("Image")
function
y = x
function
()
f
d
clear
f
x <- c(1,2)
x
y <- c(1,2)
function(x,y)
1
function(x,y)
0
y <- c(3,4)
ls
ls
clear
grep
x
y
function(x, y)
1
help("function]")
help("function")
function(y=x)
r
function(y=x);
add <- function(x+y)
23 +4
add <- function(x) x
add(1)
add(5)
add2 <- function(x, y) (x+y)
add2(1,2)
add3 <- function(x) (x+y)
add3(2,5)
add3(2:5)
2:4
2:99
add3
add3(1:5)
y
2 +3
heisenberg <- read.csv(file="/Users/dhruvgairola/Documents/Workspace/R/selfquiz-data.csv",head=TRUE,sep=",")
heisenberg
summary(heisenberg)
row.names(heisenberg)
rows(heisenberg)
row(heisenberg)
row.names(heisenberg)
col.names(heisenberg)
column.names(heisenberg)
names(heisenberg)
names
$names
attributes(heisenberg)
head(heisenberg)
rowsum(heisenberg)
rowsum.data.frame(heisenberg)
rowsum.heisenberg
rowsum.data.frame(file="/Users/dhruvgairola/Documents/Workspace/R/selfquiz-data.csv",head=TRUE,sep=",")
nrow(heisenberg)
myd = heisenberg
nrow(myd)
getwd()
x <- 1:4
getwd()
load("~/.RData")
getwd()
earch()
search()
lapply
rnorm(1:4)
x <- rnorm(1:4)
x
args(lapply)
lapply
args(quantile)
quantile(4)
quantile(0.3)
quantile(x <- rnorm(1000))
quantile(x <- rnorm(1000))
quantile(x <- rnorm(1000))
quantile(x <- rnorm(1000, 4))
runif(100)
quantile(runif(100))
quantile(runif(100))
quantile(x <- rnorm(1000, 4))
quantile(x <- rnorm(50000))
quantile(x <- rnorm(50000))
quantile(x <- rnorm(50000))
apply
args(apply)
args(rnorm)
rnorm(100)
rnorm(100)
args(rnorm)
rnorm(100)
rnorm(100)
rnorm(100)
rnorm(100)
rnorm(100)
rnorm(100)
rnorm(1000)
source("corr.R")
getwd()
setwd('/Users/dhruvgairola/Documents/Workspace/R/wk2')
source("corr.R")
